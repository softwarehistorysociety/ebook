{% comment %}
How this works:
1. First we store the current file name as "current-file", so we can work out when
   it's the active nav item.
2. The "nav-tree" variable has been defined in the include tag that included this file,
   usually starting with the nav list in meta.yml stored by metadata as "web-nav-tree".
3. To include children items in that tree, this file includes itself recursively, 
   redefining "nav-tree" each time as the children of the nav-tree it received originally.
4. Turtles all the way down, as deep as the nav tree in meta.yml goes.
Credit to Christian Specht for the inspiration:
https://christianspecht.de/2014/06/18/building-a-pseudo-dynamic-tree-menu-with-jekyll/
{% endcomment %}

{% include metadata %}

{% comment %}If this is neither a text directory (i.e. in a book) nor a docs page,
such as the home page or project search page...{% endcomment %}
{% if is-book-subdirectory != true and is-docs-page != true %}

  {% comment %}Get a list of all the pages we've output to check against{% endcomment %}
  {% capture page-list %}{{ site.pages | remove: ".html" }}{% endcapture %}

  {% comment %}Create a nav list{% endcomment %}
  <ol>

    {% for item in include.nav-tree | sort: "order" %}
        <li class="{% unless page-list contains item.file %}no-file{% endunless %}
        {% if item.children == nil %} no-children{% else %} has-children{% endif %}">
            <a {% if item.file != nil %}href="{{ path-to-root-directory }}{{ include.directory }}{% if is-translation %}/{{ language }}{% endif %}/text/{{ item.file }}.html{% if item.id != nil %}#{{ item.id }}{% endif %}"{% endif %} >
                {{ item.label | markdownify | remove: '<p>' | remove: '</p>' | strip_newlines }}
            </a>
            {% if item.children != nil %}
              {% include nav-list nav-tree=item.children directory=include.directory %}
            {% endif %}
        </li>
    {% endfor %}

  </ol>

{% comment %}Otherwise, we're in a text directory (i.e. in a book),
and we're not on a docs page, create the full book nav.{% endcomment %}
{% else %}

  {% capture nav-branch %}{{ include.nav-tree }}{% endcapture %}
  {% capture page-list %}{{ site.pages | remove: ".html" }}{% endcapture %}

  <ol class="{% if nav-branch contains current-file %}active{% endif %}">
    {% for item in include.nav-tree | sort: "order" %}
        <li class="{% if page.url contains item.file %}active{% endif %}
        {% unless page-list contains item.file %}no-file{% endunless %}
        {% if item.link == "none" %}no-link{% endif %}
        {% if item.children == nil %}no-children{% else %}has-children{% endif %}">
            <a {% if item.file != nil and item.link != "none" %}href="{{ item.file }}.html{% if item.id != nil %}#{{ item.id }}{% endif %}"{% endif %}
               class="{% if page.url contains item.file %}active{% endif %}">
                {{ item.label | markdownify | remove: '<p>' | remove: '</p>' | strip_newlines }}
            </a>
            {% if item.children != nil %}
              {% include nav-list nav-tree=item.children %}
            {% endif %}
        </li>
    {% endfor %}
  </ol>

{% endif %}